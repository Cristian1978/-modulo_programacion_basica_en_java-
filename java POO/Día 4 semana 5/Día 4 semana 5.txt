Ejercicio 

Crear una clase Fecha en java. La clase tendrá tres atributos privados día, mes
y año de tipo int. La clase contendrá los siguientes métodos: Constructor por defecto.
Constructor con tres parámetoros para crear objetos con valores iniciales. Métodos
set y get para asignar y obtener los valores de los atributos de la clase. Método fechaCorrecta()
que comprueba si la fecha es correcta. Devuelve un valor de tipo boolean indicando si la fecha es correcta
o no. Método diaSiguiente() que cambia la fecha actual por la del día siguiente. El objeto de la clase Fecha
El objeto de la clase Fecha al que se le aplique este método deberá quedar siempre en un estado consistente,
es decir, la nueva fecha deberá ser correcta. Escribe un programa para probar la clase Fecha.
El método diaSigiente() pruébalo dentro de un bucle que imprima la fecha durante
cada iteración del bucle.

//Clase Fecha Java
public class Fecha {

    private int dia;
    private int mes;
    private int año;

    //Constructor por defecto
    public Fecha() {
    }

    //Constructor con parámetros
    public Fecha(int dia, int mes, int año) {
        this.dia = dia;
        this.mes = mes;
        this.año = año;
    }

    //setters y getters
    public void setDia(int d) {
        dia = d;
    }
    public void setMes(int m) {
        mes = m;
    }
    public void setAño(int a) {
        año = a;
    }
    public int getDia() {
        return dia;
    }
    public int getMes() {
        return mes;
    }
    public int getAño() {
        return año;
    }

    //Método para comprobar si la fecha es correcta
    public boolean fechaCorrecta() {
        boolean diaCorrecto, mesCorrecto, añoCorrecto;
        añoCorrecto = año > 0;
        mesCorrecto = mes >= 1 && mes <= 12;
        switch (mes) {
            case 2:
                if (esBisiesto()) {
                    diaCorrecto = dia >= 1 && dia <= 29;
                } else {
                    diaCorrecto = dia >= 1 && dia <= 28;
                }
                break;
            case 4:
            case 6:
            case 9:
            case 11:
                diaCorrecto = dia >= 1 && dia <= 30;
                break;
            default:
                diaCorrecto = dia >= 1 && dia <= 31;
        }
        return diaCorrecto && mesCorrecto && añoCorrecto;
    }

    //Método privado para comprobar si el año es bisiesto
    //Este método lo utiliza el método fechaCorrecta
    private boolean esBisiesto() {
        return (año % 4 == 0 && año % 100 != 0 || año % 400 == 0);
    }

    //Método que modifica la fecha cambiándola por la del día siguiente                                           
    public void diaSiguiente() {
        dia++;
        if (!fechaCorrecta()) {
            dia = 1;
            mes++;
            if (!fechaCorrecta()) {
                mes = 1;
                año++;
            }

        }
    }

    //Método toString para mostrar la fecha
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        if (dia < 10) {
            sb.append("0");
        }
        sb.append(dia);
        sb.append("-");
        if (mes < 10) {
            sb.append("0");
        }
        sb.append(mes);
        sb.append("-");
        sb.append(año);
        return sb.toString();
    }
} //Fin de la clase Fecha

Nota: hoy seguimos aprendiendo las distiantas intancias de una clase
Las clases son la base de la Programación Orientada a Objetos. Una clase
es una plantilla que define la forma de un objeto; en ella se agrupan datos
y métodos que operarán sobre esos datos En java, una clase se define con la
palabra reservada class, en Java no existe la herencia múltiple.
